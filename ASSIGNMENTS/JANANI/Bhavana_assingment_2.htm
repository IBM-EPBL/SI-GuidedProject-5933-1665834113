<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 15">
<meta name=Originator content="Microsoft Word 15">
<link rel=File-List href="Bhavana_assingment_2_files/filelist.xml">
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Bhavana</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Bhavana</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>1</o:TotalTime>
  <o:Created>2022-11-07T16:36:00Z</o:Created>
  <o:LastSaved>2022-11-07T16:36:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>241</o:Words>
  <o:Characters>1380</o:Characters>
  <o:Lines>11</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>1618</o:CharactersWithSpaces>
  <o:Version>16.00</o:Version>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:AllowPNG/>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=themeData href="Bhavana_assingment_2_files/themedata.thmx">
<link rel=colorSchemeMapping
href="Bhavana_assingment_2_files/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SplitPgBreakAndParaMark/>
  </w:Compatibility>
  <m:mathPr>
   <m:mathFont m:val="Cambria Math"/>
   <m:brkBin m:val="before"/>
   <m:brkBinSub m:val="&#45;-"/>
   <m:smallFrac m:val="off"/>
   <m:dispDef/>
   <m:lMargin m:val="0"/>
   <m:rMargin m:val="0"/>
   <m:defJc m:val="centerGroup"/>
   <m:wrapIndent m:val="1440"/>
   <m:intLim m:val="subSup"/>
   <m:naryLim m:val="undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="false"
  DefSemiHidden="false" DefQFormat="false" DefPriority="99"
  LatentStyleCount="376">
  <w:LsdException Locked="false" Priority="0" QFormat="true" Name="Normal"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 1"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 2"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 3"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 4"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 5"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 6"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 7"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 8"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 9"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 1"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 2"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 3"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 4"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 5"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 6"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 7"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 8"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footnote text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="header"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footer"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index heading"/>
  <w:LsdException Locked="false" Priority="35" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="caption"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="table of figures"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="envelope address"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="envelope return"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footnote reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="line number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="page number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="endnote reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="endnote text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="table of authorities"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="macro"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="toa heading"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 5"/>
  <w:LsdException Locked="false" Priority="10" QFormat="true" Name="Title"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Closing"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Signature"/>
  <w:LsdException Locked="false" Priority="1" SemiHidden="true"
   UnhideWhenUsed="true" Name="Default Paragraph Font"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Message Header"/>
  <w:LsdException Locked="false" Priority="11" QFormat="true" Name="Subtitle"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Salutation"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Date"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text First Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text First Indent 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Note Heading"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Block Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Hyperlink"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="FollowedHyperlink"/>
  <w:LsdException Locked="false" Priority="22" QFormat="true" Name="Strong"/>
  <w:LsdException Locked="false" Priority="20" QFormat="true" Name="Emphasis"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Document Map"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Plain Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="E-mail Signature"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Top of Form"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Bottom of Form"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal (Web)"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Acronym"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Address"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Cite"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Code"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Definition"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Keyboard"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Preformatted"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Sample"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Typewriter"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Variable"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal Table"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation subject"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="No List"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Contemporary"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Elegant"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Professional"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Subtle 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Subtle 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Balloon Text"/>
  <w:LsdException Locked="false" Priority="39" Name="Table Grid"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Theme"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Placeholder Text"/>
  <w:LsdException Locked="false" Priority="1" QFormat="true" Name="No Spacing"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 1"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 1"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Revision"/>
  <w:LsdException Locked="false" Priority="34" QFormat="true"
   Name="List Paragraph"/>
  <w:LsdException Locked="false" Priority="29" QFormat="true" Name="Quote"/>
  <w:LsdException Locked="false" Priority="30" QFormat="true"
   Name="Intense Quote"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 1"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 1"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 2"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 2"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 2"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 3"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 3"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 3"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 4"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 4"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 4"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 5"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 5"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 5"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 6"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 6"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 6"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="19" QFormat="true"
   Name="Subtle Emphasis"/>
  <w:LsdException Locked="false" Priority="21" QFormat="true"
   Name="Intense Emphasis"/>
  <w:LsdException Locked="false" Priority="31" QFormat="true"
   Name="Subtle Reference"/>
  <w:LsdException Locked="false" Priority="32" QFormat="true"
   Name="Intense Reference"/>
  <w:LsdException Locked="false" Priority="33" QFormat="true" Name="Book Title"/>
  <w:LsdException Locked="false" Priority="37" SemiHidden="true"
   UnhideWhenUsed="true" Name="Bibliography"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="TOC Heading"/>
  <w:LsdException Locked="false" Priority="41" Name="Plain Table 1"/>
  <w:LsdException Locked="false" Priority="42" Name="Plain Table 2"/>
  <w:LsdException Locked="false" Priority="43" Name="Plain Table 3"/>
  <w:LsdException Locked="false" Priority="44" Name="Plain Table 4"/>
  <w:LsdException Locked="false" Priority="45" Name="Plain Table 5"/>
  <w:LsdException Locked="false" Priority="40" Name="Grid Table Light"/>
  <w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="46" Name="List Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Mention"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Smart Hyperlink"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Hashtag"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Unresolved Mention"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Smart Link"/>
 </w:LatentStyles>
</xml><![endif]-->
<style scoped>
<!--
\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>RowNumber</th>\n",
              "      <th>CustomerId</th>\n",
              "      <th>Surname</th>\n",
              "      <th>CreditScore</th>\n",
              "      <th>Geography</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Tenure</th>\n",
              "      <th>Balance</th>\n",
              "      <th>NumOfProducts</th>\n",
              "      <th>HasCrCard</th>\n",
              "      <th>IsActiveMember</th>\n",
              "      <th>EstimatedSalary</th>\n",
              "      <th>Exited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>15634602</td>\n",
              "      <td>Hargrave</td>\n",
              "      <td>619</td>\n",
              "      <td>France</td>\n",
              "      <td>Female</td>\n",
              "      <td>42</td>\n",
              "      <td>2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>101348.88</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>15647311</td>\n",
              "      <td>Hill</td>\n",
              "      <td>608</td>\n",
              "      <td>Spain</td>\n",
              "      <td>Female</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>83807.86</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>112542.58</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>15619304</td>\n",
              "      <td>Onio</td>\n",
              "      <td>502</td>\n",
              "      <td>France</td>\n",
              "      <td>Female</td>\n",
              "      <td>42</td>\n",
              "      <td>8</td>\n",
              "      <td>159660.80</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>113931.57</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>15701354</td>\n",
              "      <td>Boni</td>\n",
              "      <td>699</td>\n",
              "      <td>France</td>\n",
              "      <td>Female</td>\n",
              "      <td>39</td>\n",
              "      <td>1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>93826.63</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>15737888</td>\n",
              "      <td>Mitchell</td>\n",
              "      <td>850</td>\n",
              "      <td>Spain</td>\n",
              "      <td>Female</td>\n",
              "      <td>43</td>\n",
              "      <td>2</td>\n",
              "      <td>125510.82</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>79084.10</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a1730ae9-371b-4743-ab27-db1a3ac59e2f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a1730ae9-371b-4743-ab27-db1a3ac59e2f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a1730ae9-371b-4743-ab27-db1a3ac59e2f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {}
: 5
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "3.VISUALIZATION\n",
        "   \n",
        "   1.Univariate Analysis\n",
        "\n"
      ],
      "metadata": {
        "id": "nnNb7jViwZI_"
      }
    }
: [
        "sns.displot(df.CreditScore)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 387
        },
        "id": "CpZmFigSwmDQ",
        "outputId": "9d0d5cff-f942-4853-d3b8-0f2431210674"
      }
: 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7fb67d7956d0>"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
: [
              "<Figure size 360x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.barplot(df.Geography.value_counts().index,df.Geography.value_counts())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 340
        },
        "id": "H8wbkvj_xNDT",
        "outputId": "1536577c-e485-4472-bfc8-f536139f534a"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  FutureWarning\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fb67ad66d90>"
            ]
          },
          "metadata": {},
          "execution_count": 7
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYsAAAD4CAYAAAAdIcpQAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAU0UlEQVR4nO3de9RddX3n8fcHwsVCB4LElAlgMiXagZlWJQIdnFUuUy7WCrUIOF0SHTrpOLHa6bTeWxSlS6er0gEtbUZSwTWKaEUyXkrDTUZbLuHSIFiGiCCkCIEA3qZhgO/8cX6PHjDJ7wSe8zxPkvdrrbP23r99Od/DJs/n7N++nFQVkiRtzg7TXYAkaeYzLCRJXYaFJKnLsJAkdRkWkqSuWdNdwDjsvffeNX/+/OkuQ5K2KjfeeONDVTVnY/O2ybCYP38+q1atmu4yJGmrkuSeTc2zG0qS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpa6xhkeTuJLcmuSXJqta2V5KVSe5sw9mtPUnOSbImyeokLxvazuK2/J1JFo+zZknST5qKI4sjq+olVbWoTb8DuKKqFgJXtGmA44GF7bUEOA8G4QKcARwKHAKcMREwkqSpMR3dUCcAF7TxC4ATh9ovrIFrgT2T7AMcC6ysqvVV9QiwEjhuqouWpO3ZuO/gLuBvkhTwF1W1DJhbVfe3+d8B5rbxecC9Q+ve19o21f40SZYwOCJh//33H7nAg3//wpGX1bN34x+fNt0lSHoOxh0Wr6iqtUleAKxM8g/DM6uqWpA8Zy2IlgEsWrTIn/+TpEk01m6oqlrbhg8ClzA45/BA616iDR9si68F9htafd/Wtql2SdIUGVtYJNktyU9PjAPHAF8HVgATVzQtBi5t4yuA09pVUYcBj7XuqsuAY5LMbie2j2ltkqQpMs5uqLnAJUkm3ueTVfXXSW4ALk5yOnAPcHJb/kvAK4E1wA+BNwJU1fok7wduaMudWVXrx1i3JOkZxhYWVXUX8AsbaX8YOHoj7QUs3cS2lgPLJ7tGSdJovINbktRlWEiSugwLSVKXYSFJ6jIsJEldhoUkqcuwkCR1GRaSpC7DQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSugwLSVKXYSFJ6jIsJEldhoUkqcuwkCR1GRaSpK6xh0WSHZPcnOQLbXpBkuuSrEny6SQ7t/Zd2vSaNn/+0Dbe2drvSHLsuGuWJD3dVBxZvBX4xtD0h4Czq+oA4BHg9NZ+OvBIaz+7LUeSA4FTgYOA44A/S7LjFNQtSWrGGhZJ9gV+BfhYmw5wFPDZtsgFwIlt/IQ2TZt/dFv+BOCiqtpQVd8C1gCHjLNuSdLTjfvI4k+BtwFPtennA49W1RNt+j5gXhufB9wL0OY/1pb/UftG1pEkTYGxhUWSVwEPVtWN43qPZ7zfkiSrkqxat27dVLylJG03xnlkcTjw6iR3Axcx6H7678CeSWa1ZfYF1rbxtcB+AG3+HsDDw+0bWedHqmpZVS2qqkVz5syZ/E8jSduxsYVFVb2zqvatqvkMTlBfWVW/AVwFnNQWWwxc2sZXtGna/Curqlr7qe1qqQXAQuD6cdUtSfpJs/qLTLq3Axcl+QBwM3B+az8f+ESSNcB6BgFDVd2W5GLgduAJYGlVPTn1ZUvS9mtKwqKqrgaubuN3sZGrmarqn4DXbmL9s4CzxlehJGlzvINbktRlWEiSugwLSVKXYSFJ6jIsJEldhoUkqcuwkCR1GRaSpC7DQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSukYKiyR/kuSgcRcjSZqZRj2y+AawLMl1Sf5Tkj3GWZQkaWYZKSyq6mNVdThwGjAfWJ3kk0mOHGdxkqSZYeRzFkl2BH6uvR4C/h743SQXjak2SdIMMWuUhZKcDfwqcAXwR1V1fZv1oSR3jKs4SdLMMFJYAKuB91TVDzYy75BJrEeSNAONFBZV9ZdJ5iX5heF1quqaqnpsbNVJkmaEUbuhPgicCtwOPNmaC7hmM+vs2ubv0t7ns1V1RpIFwEXA84EbgddX1eNJdgEuBA4GHgZOqaq727beCZze3vstVXXZFn5OSdJzMGo31K8BL66qDVuw7Q3AUVX1/SQ7AV9N8mXgd4Gzq+qiJH/OIATOa8NHquqAJKcCHwJOSXIgg6A6CPjnwOVJXlRVT27sTSVJk2/Uq6HuAnbakg3XwPfb5E7tVcBRwGdb+wXAiW38hDZNm390krT2i6pqQ1V9C1iD50kkaUpt9sgiybkM/sD/ELglyRUMjhgAqKq3dNbfkUFX0wHAR4FvAo9W1RNtkfuAeW18HnBv2+4TSR5j0FU1D7h2aLPD6wy/1xJgCcD++++/ubIkSVuo1w21qg1vBFZs6cZbV9FLkuwJXMLgHo2xqKplwDKARYsW1bjeR5K2R5sNi6qa6BYiyc4M/tgXcEdVPT7qm1TVo0muAn4R2DPJrHZ0sS+wti22FtgPuC/JLGAPBie6J9onDK8jSZoCoz5I8JUMupDOAT4CrElyfGedOe2IgiTPA36ZwTOmrgJOaostBi5t4yvaNG3+lVVVrf3UJLu0K6kWAhM3BUqSpsCoV0N9GDiyqtYAJPlZ4IvAlzezzj7ABe28xQ7AxVX1hSS3Axcl+QBwM3B+W/584BNJ1gDrGVwBRVXdluRiBpftPgEs9UooSZpao4bF9yaCorkL+N7mVqiq1cBLN9J+Fxu5mqmq/gl47Sa2dRZw1oi1SpIm2ahhsSrJl4CLGZyzeC1wQ5LXAFTV58ZUnyRpBhg1LHYFHgB+qU2vA57H4OGCBRgWkrQNG/XZUG8cdyGSpJlr1GdD7crgcRwHMTjKAKCq/sOY6pIkzSCjPu7jE8DPAMcCX2Fwr8NmT3BLkrYdo4bFAVX1B8AP2o16vwIcOr6yJEkzyahh8f/a8NEk/4rB3dUvGE9JkqSZZtSroZYlmQ28h8Ed1bsDfzC2qiRJM0o3LJLsAHy3qh5h8GNG/2LsVUmSZpRuN1RVPQW8bQpqkSTNUKOes7g8ye8l2S/JXhOvsVYmSZoxRj1ncUobLh1qK+ySkqTtwqh3cC8YdyGSpJlr1Du4X7OR5seAW6vqwcktSZI004zaDXU6g1+5u6pNH8Hgp1YXJDmzqj4xhtqkrm+f+a+nu4Rt3v5/eOt0l6AZYNSwmAX8y6p6ACDJXOBCBndxX8PgcSCStEUOP/fw6S5hm/e13/7apGxn1Kuh9psIiubB1raeH9/dLUnaRo16ZHF1ki8An2nTJ7W23YBHx1KZJGnGGDUslgKvAV7Rpi8A/qqqCjhyHIVJkmaOUS+drSRfBR5ncH/F9S0oJEnbgZHOWSQ5GbieQffTycB1SU4aZ2GSpJlj1G6odwMvn7inIskc4HLgs+MqTJI0c4x6NdQOz7j57uEtWFeStJUb9cjir5NcBnyqTZ8CfHk8JUmSZppRT3D/fnvkx8TVUMuq6pLxlSVJmklGPbKAweM9vltVlyf5qSQ/XVXfG1dhkqSZY9Srof4jg5PZf9Ga5gGfH1dRkqSZZdST1EuBw4HvAlTVncALxlWUJGlmGTUsNlTV4xMTSWYxuDlPkrQdGDUsvpLkXcDzkvwyg2dE/a/xlSVJmklGDYt3AOuAW4ElwBer6t1jq0qSNKNsNiySnJBkaVU9VVX/A3ghsAh4l4/7kKTtR+/I4m3AiqHpnYGDGfxS3ps2t2KS/ZJcleT2JLcleWtr3yvJyiR3tuHs1p4k5yRZk2R1kpcNbWtxW/7OJIufxeeUJD0HvbDYuaruHZr+alWtr6pvA7t11n0C+K9VdSBwGLA0yYEMurSuqKqFwBVtGuB4YGF7LQHOg0G4AGcw+FW+Q4AzJgJGkjQ1emHxtD/KVfXmock5m1uxqu6vqpva+PeAbzC4P+MEBr+HQRue2MZPAC6sgWuBPZPsAxwLrGwh9QiwEjiu+8kkSZOmFxbXtRvynibJbzF4ZPlIkswHXgpcB8ytqvvbrO8Ac9v4PGD4KOa+1rap9me+x5Ikq5KsWrdu3ailSZJG0Hvcx38BPp/k3wM3tbaDgV348RHBZiXZHfgr4Heq6rtJfjSv/ajSpNyvUVXLgGUAixYt8h4QSZpEmw2L9ljyf5PkKOCg1vzFqrpylI0n2YlBUPzPqvpca34gyT5VdX/rZpp49PlaYL+h1fdtbWsZnFAfbr96lPeXJE2Oke6zqKorq+rc9ho1KAKcD3yjqj48NGsFMHFF02Lg0qH209pVUYcBj7XuqsuAY5LMbie2j2ltkqQpsiVPnd1ShwOvB25NcktrexfwQeDiJKcD9zD4mVaALwGvBNYAPwTeCFBV65O8H7ihLXdmVa0fY92SpGcYW1hU1VeBbGL20RtZvhg8sHBj21oOLJ+86iRJW8KfRpUkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSugwLSVKXYSFJ6jIsJEldhoUkqcuwkCR1GRaSpC7DQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpa2xhkWR5kgeTfH2oba8kK5Pc2YazW3uSnJNkTZLVSV42tM7itvydSRaPq15J0qaN88ji48Bxz2h7B3BFVS0ErmjTAMcDC9trCXAeDMIFOAM4FDgEOGMiYCRJU2dsYVFV1wDrn9F8AnBBG78AOHGo/cIauBbYM8k+wLHAyqpaX1WPACv5yQCSJI3ZVJ+zmFtV97fx7wBz2/g84N6h5e5rbZtq/wlJliRZlWTVunXrJrdqSdrOTdsJ7qoqoCZxe8uqalFVLZozZ85kbVaSxNSHxQOte4k2fLC1rwX2G1pu39a2qXZJ0hSa6rBYAUxc0bQYuHSo/bR2VdRhwGOtu+oy4Jgks9uJ7WNamyRpCs0a14aTfAo4Atg7yX0Mrmr6IHBxktOBe4CT2+JfAl4JrAF+CLwRoKrWJ3k/cENb7syqeuZJc0nSmI0tLKrqdZuYdfRGli1g6Sa2sxxYPomlSZK2kHdwS5K6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSugwLSVKXYSFJ6jIsJEldhoUkqcuwkCR1GRaSpC7DQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSuraasEhyXJI7kqxJ8o7prkeStidbRVgk2RH4KHA8cCDwuiQHTm9VkrT92CrCAjgEWFNVd1XV48BFwAnTXJMkbTdSVdNdQ1eSk4Djquo32/TrgUOr6s1DyywBlrTJFwN3THmhU2dv4KHpLkLPmvtv67Wt77sXVtWcjc2YNdWVjEtVLQOWTXcdUyHJqqpaNN116Nlx/229tud9t7V0Q60F9hua3re1SZKmwNYSFjcAC5MsSLIzcCqwYpprkqTtxlbRDVVVTyR5M3AZsCOwvKpum+ayptN20d22DXP/bb222323VZzgliRNr62lG0qSNI0MC0lSl2ExTZI8meSWodf86a5JT5dkbpJPJrkryY1J/i7Jr013XZo8Sd6d5LYkq9u/w0OfxTZevT08gshzFtMkyferavdNzAuDffPUFJelpu2DvwUuqKo/b20vBF5dVeeOsP6sqnpizGXqOUjyi8CHgSOqakOSvYGdq+ofp7m0Gckjixkiyfz2oMQLga8D+yU5L8mq9s3nfUPL3p3kfUluSnJrkp9r7bsn+cvWtjrJr7f2Y9q34puSfCbJRkNKT3MU8PhEUABU1T1VdW6SHZP8cZIb2n/n3wJIckSS/51kBXB7m/5Kkkvb0ckHk/xGkuvbPvrZtt6vJrkuyc1JLk8yt7W/N8nyJFe39d/S2s9M8jsTdSU5K8lbp/I/zjZiH+ChqtoAUFUPVdU/tn9f/63to+uTHACb3U9vSPKRNv7xJOck+du2z06atk832arK1zS8gCeBW9rrEmA+8BRw2NAye7XhjsDVwM+36buB327j/xn4WBv/EPCnQ+vPZvB4gmuA3Vrb24E/nO7PP9NfwFuAszcxbwnwnja+C7AKWAAcAfwAWNDmHQE8yuCP0i4MbiR9X5v31ol91fbTxFH+bwJ/0sbfy+DoZpe2Hx8Gdmr/r9zUltkB+Cbw/On+b7a1vYDd27+//wP8GfBLrf1u4N1t/DTgC5399AbgI23848Bn2n45kMEz7ab9s07Ga6u4z2Ib9X+r6iUTE+2cxT1Vde3QMie3Z17NYvAH50BgdZv3uTa8EXhNG/93DG5YBKCqHknyqrbe1wY9K+wM/N1kf5htXZKPAq8AHgfuAX5+6FvjHsDCNu/6qvrW0Ko3VNX9bRvfBP6mtd8KHNnG9wU+nWQfBvtneP0v1uCb74YkDwJzq+ruJA8neSkwF7i5qh6e5I+8zauq7yc5GPi3DPbFp4fOPXxqaHh2G9/cfhr2+Rp0Id8+cfSxLTAsZpYfTIwkWQD8HvDy9kf/48CuQ8tuaMMn2fx+DLCyql43ybVu624Dfn1ioqqWtj7tVcC3GRzZXTa8QpIjGNqHzYah8aeGpp/ix/vtXODDVbWibeO9m1h/eF9/jME32p8Blo/+sTSsqp5kcNR+dZJbgcUTs4YXa8PN7adhw/ssk1bsNPOcxcz1zxj84XmsfTs5foR1VgJLJyaSzAauBQ4f6nfdLcmLxlDvtuZKYNckbxpq+6k2vAx4U5KdAJK8KMluz+G99uDHzzpbvLkFh1wCHAe8vNWjLZTkxUkWDjW9hMFRI8ApQ8OJI/Fns5+2GR5ZzFBV9fdJbgb+AbgX+NoIq30A+GiSrzP4Fvq+qvpckjcAn0qyS1vuPQz6abUJVVVJTgTOTvI2YB2D8H47gz7p+cBN7aqpdcCJz+Ht3gt8JskjDEJqwQj1PZ7kKuDR9u1YW2534NwkewJPAGsYnI96FTA7yWoGRwkTR+XvZQv307bES2elrVCSHYCbgNdW1Z3TXc+2JMndwKKq2pZ/t2KL2Q0lbWUy+EnhNcAVBoWmikcWkqQujywkSV2GhSSpy7CQJHUZFpKkLsNCktT1/wEFqnc5TLfrgwAAAABJRU5ErkJggg==\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
: [
        "sns.histplot(df.Tenure)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "2Dz9JghfyCV9",
        "outputId": "979ec21d-6748-4e57-d5b2-8df268751678"
      }
: 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fb67a8c7ad0>"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
: [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.pie(df.Geography.value_counts(),[0,0,0.2],autopct='%1.1f%%',labels=['France','Germany','Spain'],shadow=True,colors=['purple','yellow','green'])\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 248
        },
        "id": "AwTZNMXzyKGS",
        "outputId": "eb07678c-95ab-4919-e986-f960bd864684"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
: [
        "2.Bivariate Analysis"
      ],
      "metadata": {
        "id": "6mQzUadtyY3D"
      }
: [
        "sns.lineplot(df.Age,df.CreditScore)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 354
        },
        "id": "crOZvwBEygdJ",
        "outputId": "0bf9b0c0-06c5-46cc-81b8-47dc55c7fca2"
      }
: 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  FutureWarning\n"
          ]
        }
: [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fb673cd0450>"
            ]
          },
          "metadata": {}
: 12
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.bar(df.CreditScore,df.Balance)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        },
        "id": "GiO6349VzI3S",
        "outputId": "d5162d23-e81b-41c9-e4c2-dea93a2ec8a1"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<BarContainer object of 10000 artists>"
            ]
          },
          "metadata": {},
          "execution_count": 13
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYkAAAD4CAYAAAAZ1BptAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAUbUlEQVR4nO3dfaxk9X3f8fenbCApiWGBDaIs7uJ4RUUsBeMVXstRVZsUFrfKEolGoMqsoo23kkGxk0jNOv2D1G4ku2pCi+Sg4rDxEqXGlNhlZWNvthgpahQwi0N5NOIG47ArHjYshqhW42J/+8f81sxez7l799658/h+SaN75nuefr+ZOeczc86ZuakqJEka5B+MuwGSpMllSEiSOhkSkqROhoQkqZMhIUnqtG7cDRi2c845pzZt2jTuZkjSVHn44Yf/tqo2LK7PXEhs2rSJgwcPjrsZkjRVknx7UN3DTZKkToaEJKmTISFJ6mRISJI6GRKSpE6GhCSp0wlDIskFSe5P8mSSJ5J8pNV/J8nhJI+02wf65vlYkoUkTye5sq++rdUWkuzuq1+Y5MFW/3ySU1v9tHZ/oY3fNMzOS5KWtpxPEm8Av1lVFwNbgRuSXNzG3VxVl7TbvQBt3LXAzwLbgD9IckqSU4BPA1cBFwPX9S3nU21ZbwdeBXa2+k7g1Va/uU0nSRqRE4ZEVb1QVd9ow38HPAWcv8Qs24E7q+rvq+pbwAJwWbstVNWzVfU94E5ge5IA7wfubvPvBa7uW9beNnw3cHmbXpI0Aid1TqId7nkn8GAr3Zjk0SR7kqxvtfOB5/tmO9RqXfWzge9U1RuL6sctq41/rU2/uF27khxMcvDIkSMn0yVJ0hKWHRJJfhL4U+CjVfU6cCvwM8AlwAvA761JC5ehqm6rqi1VtWXDhh/56RFJ0gotKySS/Bi9gPiTqvoCQFW9VFXfr6ofAJ+hdzgJ4DBwQd/sG1utq/4KcGaSdYvqxy2rjT+jTS9JGoHlXN0U4Hbgqar6/b76eX2T/RLweBveB1zbrky6ENgMfB14CNjcrmQ6ld7J7X3V+yfb9wPXtPl3APf0LWtHG74G+Fr5T7klaWSW8yuw7wU+CDyW5JFW+216VyddAhTwHPBvAKrqiSR3AU/SuzLqhqr6PkCSG4H9wCnAnqp6oi3vt4A7k/wH4K/ohRLt7x8nWQCO0gsWSdKIZNbemG/ZsqX8qXBJOjlJHq6qLYvrfuNaktTJkJAkdTIkJEmdDAlJUidDQpLUyZCQJHUyJCRJnQwJSVInQ0KS1MmQkCR1MiQkSZ0MCUlSJ0NCktTJkJAkdTIkJEmdDAlJUidDQpLUyZCQJHUyJCRJnQwJSVInQ0KS1MmQkCR1MiSkObdp95fH3QRNMENCktTJkJBmnJ8UtBqGhLRKg3bC7pg1amv1mjMkNLPcUUurZ0hIkjoZEpKkToaEJKmTISHppHm+Z34YEpoYk7LjmZR2SJPAkNBcMQCkk3PCkEhyQZL7kzyZ5IkkH2n1s5IcSPJM+7u+1ZPkliQLSR5Ncmnfsna06Z9JsqOv/q4kj7V5bkmSpdYhSYP4JmD4lvNJ4g3gN6vqYmArcEOSi4HdwH1VtRm4r90HuArY3G67gFuht8MHbgLeDVwG3NS3078V+FDffNtavWsd0lxx56dxOWFIVNULVfWNNvx3wFPA+cB2YG+bbC9wdRveDtxRPQ8AZyY5D7gSOFBVR6vqVeAAsK2Ne0tVPVBVBdyxaFmD1iFpjRhI6ndS5ySSbALeCTwInFtVL7RRLwLntuHzgef7ZjvUakvVDw2os8Q6FrdrV5KDSQ4eOXLkZLqkNeKORr4GZsOyQyLJTwJ/Cny0ql7vH9c+AdSQ23acpdZRVbdV1Zaq2rJhw4a1bIaGwJ3HdPJ5m0/LCokkP0YvIP6kqr7Qyi+1Q0W0vy+3+mHggr7ZN7baUvWNA+pLrUNzYNp3SqNu/7Q/XppMy7m6KcDtwFNV9ft9o/YBx65Q2gHc01e/vl3ltBV4rR0y2g9ckWR9O2F9BbC/jXs9yda2rusXLWvQOiRNIINq9qxbxjTvBT4IPJbkkVb7beCTwF1JdgLfBn65jbsX+ACwAHwX+BWAqjqa5BPAQ226j1fV0Tb8YeCzwE8AX2k3lliHpAlmWMyOE4ZEVf0vIB2jLx8wfQE3dCxrD7BnQP0g8I4B9VcGrUOSNBp+41oaId9hD98kPqaT2KaVMiQ0UWZp49L06H/d+Ro8niGhqTTLG/Is963LpPR5UtoxSQwJaQTWeufjzk1rxZCQ9EPjDptRrX/c/ZwmhoTUuOMYvll4TGehD6thSEhTZJJ2WJPUFq0dQ0LSQIaAwJDQKg3akbhzOXlr8ZhN+vMw6Sfzx/X4TdrzZkhIc2BYO55J24Fp7RkS0gks3jG6oxyelTyWw378vaJqaYaEtIRxb9jjOiQz7n4PMow2TWK/Jp0hoZEY9bu1SdwZTGKbZt1Sj/lKx80bQ0KdJn1DmfT2SbPAkNBEOpkAGEdYGFDdvOJtthgSGgp3ApPlRM/Hcp+vSX1eZ7Vdk9gvQ0KS1MmQ0FSZxHdas26SD+f5elh7hoTWnBvy2pimy1c1vQwJacj8drNmiSGhuTapO+K1DJpJ7fMxs/SluWFdQDBOhoTmzjRsmDrepD9nk96+1TAk5sAsv4CXaxJ+I2hUyx61terLJD5Gk9imtWZI6Diz8GN209LmaWnnckxyXya5bdPAkJCWyZ3N0ubt8ZmX/hoSmgqr2SCXM6+HlkZjnIemfB5WxpCYMaPcENZ6x60eH6v5Nu7vwxgSOmnT+k9fJmW9ixm2mmSGhDQnZuGa/aVMSvsnpR3DYkhook37Bjft7Z9GPubDZUhMmWFuAMP+EbVp/HbvpJnFn5pebFLb6I8KDmZISEMybzuPYZv2Nxmz+u9QTxgSSfYkeTnJ432130lyOMkj7faBvnEfS7KQ5OkkV/bVt7XaQpLdffULkzzY6p9Pcmqrn9buL7Txm4bVaR1vnC/gWd4xSLNgOZ8kPgtsG1C/uaouabd7AZJcDFwL/Gyb5w+SnJLkFODTwFXAxcB1bVqAT7VlvR14FdjZ6juBV1v95jbdmnKDVxdfGxqmaXo9nTAkqurPgaPLXN524M6q+vuq+hawAFzWbgtV9WxVfQ+4E9ieJMD7gbvb/HuBq/uWtbcN3w1c3qbXnJmmDUqaNas5J3Fjkkfb4aj1rXY+8HzfNIdarat+NvCdqnpjUf24ZbXxr7Xpf0SSXUkOJjl45MiRVXRJ4E5Zw+Xr6eRN0mO20pC4FfgZ4BLgBeD3htaiFaiq26pqS1Vt2bBhwzibIkkzZUUhUVUvVdX3q+oHwGfoHU4COAxc0Dfpxlbrqr8CnJlk3aL6cctq489o00vLttJ3ZJP0Tk4apxWFRJLz+u7+EnDsyqd9wLXtyqQLgc3A14GHgM3tSqZT6Z3c3ldVBdwPXNPm3wHc07esHW34GuBrbfqxcccxXj7+mmWT+jP9y7kE9nPAXwIXJTmUZCfwH5M8luRR4H3ArwNU1RPAXcCTwFeBG9onjjeAG4H9wFPAXW1agN8CfiPJAr1zDre3+u3A2a3+G8APL5vV8E3KC3La+Thq1qw70QRVdd2A8u0Dasem/13gdwfU7wXuHVB/ljcPV/XX/y/wr07UvrW2afeXee6T/2LczRiaWeuPNC+W2nbX8s2J37iWJHUyJCRphebhZ+4NiTkxrBfVySxnUk/ESSdrnl+7hoSWbZ43FGleGRLSlDGsp8MwnqdJeK4NCUkaoWn7d7WGhGbCJLzjklZi0l+7hoQkqZMhIUnqZEiMwKR/nJSkLobEFDBkJI2LISFJ6mRInKS1elfvpwVpfk3y9m9IzDj/6Y6k1TAkZtSwd/KGhjSfDAlJUidDQpKm2Fp/yjckpsixF8Om3V/28I+kkTAkJEmdDAlJUidDQpLUyZCYIZ6nkDRshoQkqZMhIUnqZEhIkjoZEpKkToaEJKmTISFJ6mRISJI6GRKSpE6GhCSpkyEhSep0wpBIsifJy0ke76udleRAkmfa3/WtniS3JFlI8miSS/vm2dGmfybJjr76u5I81ua5JUmWWoeWz5/pkLRay/kk8Vlg26LabuC+qtoM3NfuA1wFbG63XcCt0NvhAzcB7wYuA27q2+nfCnyob75tJ1iHJGlEThgSVfXnwNFF5e3A3ja8F7i6r35H9TwAnJnkPOBK4EBVHa2qV4EDwLY27i1V9UBVFXDHomUNWockaURWek7i3Kp6oQ2/CJzbhs8Hnu+b7lCrLVU/NKC+1Dp+RJJdSQ4mOXjkyJEVdEeSNMiqT1y3TwA1hLaseB1VdVtVbamqLRs2bFjLpkjSXFlpSLzUDhXR/r7c6oeBC/qm29hqS9U3DqgvtQ5J0oisNCT2AceuUNoB3NNXv75d5bQVeK0dMtoPXJFkfTthfQWwv417PcnWdlXT9YuWNWgdkqQRWc4lsJ8D/hK4KMmhJDuBTwL/PMkzwC+0+wD3As8CC8BngA8DVNVR4BPAQ+328VajTfOHbZ6/Br7S6l3rmBpegipp2q070QRVdV3HqMsHTFvADR3L2QPsGVA/CLxjQP2VQeuQJI2O37iWJHUyJCRJnQwJSVInQ2JOeVJd0nIYEhPKnbikSWBISJI6GRKSpE6GhCSpkyEhSepkSEiSOhkSkqROhoQkqZMhIUnqZEhIkjoZEpKkToaEJKmTISFJ6mRISJI6GRKSpE6GhCSpkyEhSepkSEiSOhkSkqROhoQkqZMhIUnqZEhIkjoZEpKkToaEJKmTITHhNu3+8ribIGmOGRKSpE6GhCSpkyEhSeq0qpBI8lySx5I8kuRgq52V5ECSZ9rf9a2eJLckWUjyaJJL+5azo03/TJIdffV3teUvtHmzmvZKkk7OMD5JvK+qLqmqLe3+buC+qtoM3NfuA1wFbG63XcCt0AsV4Cbg3cBlwE3HgqVN86G++bYNob2SpGVai8NN24G9bXgvcHVf/Y7qeQA4M8l5wJXAgao6WlWvAgeAbW3cW6rqgaoq4I6+ZUmSRmC1IVHAnyV5OMmuVju3ql5owy8C57bh84Hn++Y91GpL1Q8NqEuSRmTdKuf/+ao6nOSngQNJvtk/sqoqSa1yHSfUAmoXwFvf+ta1Xp0kzY1VfZKoqsPt78vAF+mdU3ipHSqi/X25TX4YuKBv9o2ttlR944D6oHbcVlVbqmrLhg0bVtMlSVKfFYdEktOT/NSxYeAK4HFgH3DsCqUdwD1teB9wfbvKaSvwWjsstR+4Isn6dsL6CmB/G/d6kq3tqqbr+5YlSRqB1RxuOhf4YrsqdR3w36rqq0keAu5KshP4NvDLbfp7gQ8AC8B3gV8BqKqjST4BPNSm+3hVHW3DHwY+C/wE8JV2kySNyIpDoqqeBX5uQP0V4PIB9QJu6FjWHmDPgPpB4B0rbaMkaXX8xrUkqZMhIUnqZEhIkjoZEpKkToaEJKmTISFJ6mRISJI6GRKSpE6GhCSpkyEhSepkSEiSOhkSkqROhoQkqZMhIUnqZEhIkjoZEpKkToaEJKmTISFJ6mRISJI6GRKSpE6GhCSpkyEhSepkSEiSOhkSkqROhoQkqZMhIUnqZEhIkjoZEpKkToaEJKmTISFJ6mRISJI6GRKSpE6GhCSp08SHRJJtSZ5OspBk97jbI0nzZKJDIskpwKeBq4CLgeuSXDzeVknS/JjokAAuAxaq6tmq+h5wJ7B9zG2SpLmRqhp3GzoluQbYVlW/2u5/EHh3Vd24aLpdwK529yLg6ZE2dDjOAf523I0YsXnr87z1F+zzNPnHVbVhcXHdOFoybFV1G3DbuNuxGkkOVtWWcbdjlOatz/PWX7DPs2DSDzcdBi7ou7+x1SRJIzDpIfEQsDnJhUlOBa4F9o25TZI0Nyb6cFNVvZHkRmA/cAqwp6qeGHOz1spUHy5boXnr87z1F+zz1JvoE9eSpPGa9MNNkqQxMiQkSZ0MiRFKckqSv0rypXb/wiQPtp8c+Xw7OU+S09r9hTZ+0zjbvVJJnkvyWJJHkhxstbOSHEjyTPu7vtWT5JbW50eTXDre1q9MkjOT3J3km0meSvKeWe5zkova83vs9nqSj854n389yRNJHk/yuSQ/PsvbsiExWh8Bnuq7/yng5qp6O/AqsLPVdwKvtvrNbbpp9b6quqTvuvHdwH1VtRm4r92H3k+vbG63XcCtI2/pcPwX4KtV9U+An6P3fM9sn6vq6fb8XgK8C/gu8EVmtM9Jzgd+DdhSVe+gd0HNtczytlxV3kZwo/cdj/uA9wNfAkLvW5nr2vj3APvb8H7gPW14XZsu4+7DCvr8HHDOotrTwHlt+Dzg6Tb8X4HrBk03LTfgDOBbi5+rWe7zon5eAfzFLPcZOB94HjirbZtfAq6c5W3ZTxKj85+Bfwv8oN0/G/hOVb3R7h+i9wKEN1+ItPGvtemnTQF/luTh9tMpAOdW1Qtt+EXg3Db8wz43/Y/HtLgQOAL8UTus+IdJTme2+9zvWuBzbXgm+1xVh4H/BPwN8AK9bfNhZnhbNiRGIMm/BF6uqofH3ZYR+/mqupTeIYYbkvzT/pHVe3s1S9dgrwMuBW6tqncC/4c3D7MAM9lnANox+F8E/vvicbPU53ZuZTu9NwT/CDgd2DbWRq0xQ2I03gv8YpLn6P2S7fvpHbs+M8mxLzT2/+TID3+OpI0/A3hllA0ehvaui6p6md5x6suAl5KcB9D+vtwmn4WfYDkEHKqqB9v9u+mFxiz3+ZirgG9U1Uvt/qz2+ReAb1XVkar6f8AX6G3fM7stGxIjUFUfq6qNVbWJ3kfyr1XVvwbuB65pk+0A7mnD+9p92vivtXdjUyPJ6Ul+6tgwvePVj3N83xb3+fp29ctW4LW+wxVToapeBJ5PclErXQ48yQz3uc91vHmoCWa3z38DbE3yD5OEN5/jmd2Wx35SZN5uwD8DvtSG3wZ8HVig9zH9tFb/8XZ/oY1/27jbvYJ+vg343+32BPDvWv1seifwnwH+J3BWq4feP5j6a+AxelePjL0fK+j3JcBB4FHgfwDr56DPp9N7d3xGX21m+wz8e+Cb9N70/DFw2ixvy/4shySpk4ebJEmdDAlJUidDQpLUyZCQJHUyJCRJnQwJSVInQ0KS1On/AxoCfsbRoM66AAAAAElFTkSuQmCC\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
: [
        "sns.scatterplot(df.Age,df.EstimatedSalary)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 354
        },
        "id": "oK0B2PYkzvs6",
        "outputId": "9adbc13b-2e92-4f73-f9df-ea8acb68f028"
      }
: 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  FutureWarning\n"
          ]
        }
: [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fb673830610>"
            ]
          },
          "metadata": {}
\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
]
    },
    {
      "cell_type": "markdown",
      "source": [
        "3.Multivariate Analysis"
      ],
      "metadata": {
        "id": "f7qMlyS901w9"
      }
    }
: [
        "df.hist(figsize=[8,8])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 736
        },
        "id": "NtS0QVD32S-5",
        "outputId": "43a0a821-2e5a-40d1-dcc9-ff90308eac97"
      }
: 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7fb66c6aa7d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fb66c5c3d10>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fb66c45f390>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fb66c35be90>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fb66c268150>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fb66c16af50>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fb66bdac750>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fb66b8931d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fb66b893210>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fb66b9307d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fb66b81a110>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fb66b6b9610>]],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
: [
              "<Figure size 576x576 with 12 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
]
    },
    {
      "cell_type": "code",
      "source": [
        "df.hist(figsize=[5,6])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 627
        },
        "id": "6n2gEbeg2fjg",
        "outputId": "4f9558e8-59a0-40c2-dc86-18bc51c81e6f"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7fb66b6cd3d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fb66b6d3d90>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fb66b630950>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fb66b63fe50>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fb669ddc390>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fb669e01890>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fb669da5e50>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fb669d51310>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fb669d51350>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fb669d74950>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fb669d47290>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fb673a3c710>]],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 16
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 360x432 with 12 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
: [
        "4.DESCRIPTIVE STATISTICS"
      ],
      "metadata": {
        "id": "Z2EGyI0e2raL"
      }
: [
        "df.describe()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 364
        },
        "id": "KC8pzDqD2wUh",
        "outputId": "9219c107-5329-47f1-cce7-5c798220478a"
      }
: 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         RowNumber    CustomerId   CreditScore           Age        Tenure  \\\n",
              "count  10000.00000  1.000000e+04  10000.000000  10000.000000  10000.000000   \n",
              "mean    5000.50000  1.569094e+07    650.528800     38.921800      5.012800   \n",
              "std     2886.89568  7.193619e+04     96.653299     10.487806      2.892174   \n",
              "min        1.00000  1.556570e+07    350.000000     18.000000      0.000000   \n",
              "25%     2500.75000  1.562853e+07    584.000000     32.000000      3.000000   \n",
              "50%     5000.50000  1.569074e+07    652.000000     37.000000      5.000000   \n",
              "75%     7500.25000  1.575323e+07    718.000000     44.000000      7.000000   \n",
              "max    10000.00000  1.581569e+07    850.000000     92.000000     10.000000   \n",
              "\n",
              "             Balance  NumOfProducts    HasCrCard  IsActiveMember  \\\n",
              "count   10000.000000   10000.000000  10000.00000    10000.000000   \n",
              "mean    76485.889288       1.530200      0.70550        0.515100   \n",
              "std     62397.405202       0.581654      0.45584        0.499797   \n",
              "min         0.000000       1.000000      0.00000        0.000000   \n",
              "25%         0.000000       1.000000      0.00000        0.000000   \n",
              "50%     97198.540000       1.000000      1.00000        1.000000   \n",
              "75%    127644.240000       2.000000      1.00000        1.000000   \n",
              "max    250898.090000       4.000000      1.00000        1.000000   \n",
              "\n",
              "       EstimatedSalary        Exited  \n",
              "count     10000.000000  10000.000000  \n",
              "mean     100090.239881      0.203700  \n",
              "std       57510.492818      0.402769  \n",
              "min          11.580000      0.000000  \n",
              "25%       51002.110000      0.000000  \n",
              "50%      100193.915000      0.000000  \n",
              "75%      149388.247500      0.000000  \n",
              "max      199992.480000      1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-af851849-813d-4be8-9fe1-122d0c21b516\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>RowNumber</th>\n",
              "      <th>CustomerId</th>\n",
              "      <th>CreditScore</th>\n",
              "      <th>Age</th>\n",
              "      <th>Tenure</th>\n",
              "      <th>Balance</th>\n",
              "      <th>NumOfProducts</th>\n",
              "      <th>HasCrCard</th>\n",
              "      <th>IsActiveMember</th>\n",
              "      <th>EstimatedSalary</th>\n",
              "      <th>Exited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>10000.00000</td>\n",
              "      <td>1.000000e+04</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.00000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>5000.50000</td>\n",
              "      <td>1.569094e+07</td>\n",
              "      <td>650.528800</td>\n",
              "      <td>38.921800</td>\n",
              "      <td>5.012800</td>\n",
              "      <td>76485.889288</td>\n",
              "      <td>1.530200</td>\n",
              "      <td>0.70550</td>\n",
              "      <td>0.515100</td>\n",
              "      <td>100090.239881</td>\n",
              "      <td>0.203700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2886.89568</td>\n",
              "      <td>7.193619e+04</td>\n",
              "      <td>96.653299</td>\n",
              "      <td>10.487806</td>\n",
              "      <td>2.892174</td>\n",
              "      <td>62397.405202</td>\n",
              "      <td>0.581654</td>\n",
              "      <td>0.45584</td>\n",
              "      <td>0.499797</td>\n",
              "      <td>57510.492818</td>\n",
              "      <td>0.402769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.556570e+07</td>\n",
              "      <td>350.000000</td>\n",
              "      <td>18.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>11.580000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2500.75000</td>\n",
              "      <td>1.562853e+07</td>\n",
              "      <td>584.000000</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>51002.110000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>5000.50000</td>\n",
              "      <td>1.569074e+07</td>\n",
              "      <td>652.000000</td>\n",
              "      <td>37.000000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>97198.540000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>100193.915000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>7500.25000</td>\n",
              "      <td>1.575323e+07</td>\n",
              "      <td>718.000000</td>\n",
              "      <td>44.000000</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>127644.240000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>149388.247500</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>10000.00000</td>\n",
              "      <td>1.581569e+07</td>\n",
              "      <td>850.000000</td>\n",
              "      <td>92.000000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>250898.090000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>199992.480000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-af851849-813d-4be8-9fe1-122d0c21b516')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-af851849-813d-4be8-9fe1-122d0c21b516 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-af851849-813d-4be8-9fe1-122d0c21b516');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
]
    },
    {
      "cell_type": "code",
      "source": [
        "df.NumOfProducts.count()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Er-yscK5240y",
        "outputId": "d845d2ed-38fb-48b8-e50e-7a7179c322b0"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10000"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    }
: [
        "5.HANDLING MISSING VALUES"
      ],
      "metadata": {
        "id": "tNbwqcUU3WXE"
      }
: [
        "df.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IhrmtVPH3ZI8",
        "outputId": "aa7233f7-4c0f-42e6-e424-5faae98fa6d8"
      }
: 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RowNumber          0\n",
              "CustomerId         0\n",
              "Surname            0\n",
              "CreditScore        0\n",
              "Geography          0\n",
              "Gender             0\n",
              "Age                0\n",
              "Tenure             0\n",
              "Balance            0\n",
              "NumOfProducts      0\n",
              "HasCrCard          0\n",
              "IsActiveMember     0\n",
              "EstimatedSalary    0\n",
              "Exited             0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
]
    },
    {
      "cell_type": "markdown",
      "source": [
        "6.FIND AND REPLACE THE OUTLIERS"
      ],
      "metadata": {
        "id": "ncgiNUoP3o1u"
      }
    }
: [
        "sns.boxplot(df.CreditScore)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 354
        },
        "id": "5gJ0XUZW663v",
        "outputId": "1a24e0d1-2263-4e01-8d5a-2c3af7114482"
      }
: 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  FutureWarning\n"
          ]
        }
: [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fb669af8610>"
            ]
          },
          "metadata": {}
: 20
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
]
    },
    {
      "cell_type": "code",
      "source": [
        "q2=df.CreditScore.quantile(0.75)\n",
        "q1=df.CreditScore.quantile(0.25)\n",
        "iqr=q2-q1"
      ],
      "metadata": {
        "id": "ExUatyU07D4g"
      },
      "execution_count": 21,
      "outputs": []
    }
: [
        "up_limit=q2+1.5*iqr\n",
        "lw_limit=q1-1.5*iqr"
      ],
      "metadata": {
        "id": "s_Uf1Mme7Lod"
      }
: 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XJG54Iou7Sh0",
        "outputId": "dbae1dd5-2b99-462a-b13f-adfa620d7c9c"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.\n",
            "  \"\"\"Entry point for launching an IPython kernel.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RowNumber          5.000500e+03\n",
              "CustomerId         1.569074e+07\n",
              "CreditScore        6.520000e+02\n",
              "Age                3.700000e+01\n",
              "Tenure             5.000000e+00\n",
              "Balance            9.719854e+04\n",
              "NumOfProducts      1.000000e+00\n",
              "HasCrCard          1.000000e+00\n",
              "IsActiveMember     1.000000e+00\n",
              "EstimatedSalary    1.001939e+05\n",
              "Exited             0.000000e+00\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    }
: [
        "df['CreditScore']=np.where(df['CreditScore']<lw_limit,652,df['CreditScore'])"
      ],
      "metadata": {
        "id": "noLx9qGZ7br2"
      }
: 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "sns.boxplot(df.CreditScore)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 354
        },
        "id": "dw0P8GSO7eNJ",
        "outputId": "07d90ad8-3dc3-4528-d866-11e791d8987d"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  FutureWarning\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fb669a62e90>"
            ]
          },
          "metadata": {},
          "execution_count": 25
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
: [
        "7.PERFORM EMCODING"
      ],
      "metadata": {
        "id": "cBcGd4857m90"
      }
: [
        "from sklearn.preprocessing import LabelEncoder\n",
        "le=LabelEncoder()"
      ],
      "metadata": {
        "id": "O5YQ_IrI7zug"
      }
: 26,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.Surname=le.fit_transform(df.Surname)\n",
        "df.Geography=le.fit_transform(df.Age)\n",
        "df.Gender=le.fit_transform(df.Gender)\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "e6Bul6bx9TFM",
        "outputId": "afc6f97d-dc68-4eeb-9659-8f5c14313acd"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   RowNumber  CustomerId  Surname  CreditScore  Geography  Gender  Age  \\\n",
              "0          1    15634602     1115          619         24       0   42   \n",
              "1          2    15647311     1177          608         23       0   41   \n",
              "2          3    15619304     2040          502         24       0   42   \n",
              "3          4    15701354      289          699         21       0   39   \n",
              "4          5    15737888     1822          850         25       0   43   \n",
              "\n",
              "   Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n",
              "0       2       0.00              1          1               1   \n",
              "1       1   83807.86              1          0               1   \n",
              "2       8  159660.80              3          1               0   \n",
              "3       1       0.00              2          0               0   \n",
              "4       2  125510.82              1          1               1   \n",
              "\n",
              "   EstimatedSalary  Exited  \n",
              "0        101348.88       1  \n",
              "1        112542.58       0  \n",
              "2        113931.57       1  \n",
              "3         93826.63       0  \n",
              "4         79084.10       0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-af5b5434-27ad-4e01-86c3-9acbbea64552\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>RowNumber</th>\n",
              "      <th>CustomerId</th>\n",
              "      <th>Surname</th>\n",
              "      <th>CreditScore</th>\n",
              "      <th>Geography</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Tenure</th>\n",
              "      <th>Balance</th>\n",
              "      <th>NumOfProducts</th>\n",
              "      <th>HasCrCard</th>\n",
              "      <th>IsActiveMember</th>\n",
              "      <th>EstimatedSalary</th>\n",
              "      <th>Exited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>15634602</td>\n",
              "      <td>1115</td>\n",
              "      <td>619</td>\n",
              "      <td>24</td>\n",
              "      <td>0</td>\n",
              "      <td>42</td>\n",
              "      <td>2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>101348.88</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>15647311</td>\n",
              "      <td>1177</td>\n",
              "      <td>608</td>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>83807.86</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>112542.58</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>15619304</td>\n",
              "      <td>2040</td>\n",
              "      <td>502</td>\n",
              "      <td>24</td>\n",
              "      <td>0</td>\n",
              "      <td>42</td>\n",
              "      <td>8</td>\n",
              "      <td>159660.80</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>113931.57</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>15701354</td>\n",
              "      <td>289</td>\n",
              "      <td>699</td>\n",
              "      <td>21</td>\n",
              "      <td>0</td>\n",
              "      <td>39</td>\n",
              "      <td>1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>93826.63</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>15737888</td>\n",
              "      <td>1822</td>\n",
              "      <td>850</td>\n",
              "      <td>25</td>\n",
              "      <td>0</td>\n",
              "      <td>43</td>\n",
              "      <td>2</td>\n",
              "      <td>125510.82</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>79084.10</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-af5b5434-27ad-4e01-86c3-9acbbea64552')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-af5b5434-27ad-4e01-86c3-9acbbea64552 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-af5b5434-27ad-4e01-86c3-9acbbea64552');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    }
: [
        "plt.figure(figsize=[10,10])\n",
        "sns.heatmap(df.corr(),annot=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 685
        },
        "id": "eKG9CqNb9cRc",
        "outputId": "5ba852d5-037c-43bd-eda2-57cf38bcf081"
      }
: 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fb66924eb10>"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
\n"
          },
          "metadata": {
            "needs_background": "light"
          }
]
    },
    {
      "cell_type": "markdown",
      "source": [
        "8.SPLIT DATA INTO DEPENDENT AND INDEPENDENT VARIABLES\n"
      ],
      "metadata": {
        "id": "V9TNvwYo-CjT"
      }
    }
: [
        "y=df['EstimatedSalary']"
      ],
      "metadata": {
        "id": "Z_fiTSqR-IuN"
      }
: 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yQ7dwuvU-T6n",
        "outputId": "7896ef11-ea3d-42d6-f660-6ef9a0f273fe"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       101348.88\n",
              "1       112542.58\n",
              "2       113931.57\n",
              "3        93826.63\n",
              "4        79084.10\n",
              "          ...    \n",
              "9995     96270.64\n",
              "9996    101699.77\n",
              "9997     42085.58\n",
              "9998     92888.52\n",
              "9999     38190.78\n",
              "Name: EstimatedSalary, Length: 10000, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    }
: [
        "X=df.drop(columns=['EstimatedSalary'],axis=1)"
      ],
      "metadata": {
        "id": "uaqrJpKa-ckb"
      }
: 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "d-GJz85W-i62",
        "outputId": "6f3dddbe-0fe6-43fd-ea57-05a4eb2381a1"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   RowNumber  CustomerId  Surname  CreditScore  Geography  Gender  Age  \\\n",
              "0          1    15634602     1115          619         24       0   42   \n",
              "1          2    15647311     1177          608         23       0   41   \n",
              "2          3    15619304     2040          502         24       0   42   \n",
              "3          4    15701354      289          699         21       0   39   \n",
              "4          5    15737888     1822          850         25       0   43   \n",
              "\n",
              "   Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  Exited  \n",
              "0       2       0.00              1          1               1       1  \n",
              "1       1   83807.86              1          0               1       0  \n",
              "2       8  159660.80              3          1               0       1  \n",
              "3       1       0.00              2          0               0       0  \n",
              "4       2  125510.82              1          1               1       0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1ce416e1-e214-47e0-82cd-2f19b4c4e340\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>RowNumber</th>\n",
              "      <th>CustomerId</th>\n",
              "      <th>Surname</th>\n",
              "      <th>CreditScore</th>\n",
              "      <th>Geography</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Tenure</th>\n",
              "      <th>Balance</th>\n",
              "      <th>NumOfProducts</th>\n",
              "      <th>HasCrCard</th>\n",
              "      <th>IsActiveMember</th>\n",
              "      <th>Exited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>15634602</td>\n",
              "      <td>1115</td>\n",
              "      <td>619</td>\n",
              "      <td>24</td>\n",
              "      <td>0</td>\n",
              "      <td>42</td>\n",
              "      <td>2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>15647311</td>\n",
              "      <td>1177</td>\n",
              "      <td>608</td>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>83807.86</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>15619304</td>\n",
              "      <td>2040</td>\n",
              "      <td>502</td>\n",
              "      <td>24</td>\n",
              "      <td>0</td>\n",
              "      <td>42</td>\n",
              "      <td>8</td>\n",
              "      <td>159660.80</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>15701354</td>\n",
              "      <td>289</td>\n",
              "      <td>699</td>\n",
              "      <td>21</td>\n",
              "      <td>0</td>\n",
              "      <td>39</td>\n",
              "      <td>1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>15737888</td>\n",
              "      <td>1822</td>\n",
              "      <td>850</td>\n",
              "      <td>25</td>\n",
              "      <td>0</td>\n",
              "      <td>43</td>\n",
              "      <td>2</td>\n",
              "      <td>125510.82</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ce416e1-e214-47e0-82cd-2f19b4c4e340')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1ce416e1-e214-47e0-82cd-2f19b4c4e340 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1ce416e1-e214-47e0-82cd-2f19b4c4e340');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    }
: [
        "9.SCALE THE INDEPENDENT VARIABLES\n"
      ],
      "metadata": {
        "id": "W51TAia0-yVw"
      }
: [
        "from sklearn.preprocessing import scale"
      ],
      "metadata": {
        "id": "Q7qKNzR8-2DD"
      }
: 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_scaled=pd.DataFrame(scale(X),columns=X.columns)\n",
        "x_scaled.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "qYqNzJyZC-wX",
        "outputId": "4db772c7-a35e-4553-9784-c40958f15715"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   RowNumber  CustomerId   Surname  CreditScore  Geography    Gender  \\\n",
              "0  -1.731878   -0.783213 -0.464183    -0.332983   0.293793 -1.095988   \n",
              "1  -1.731531   -0.606534 -0.390911    -0.447572   0.198387 -1.095988   \n",
              "2  -1.731185   -0.995885  0.628988    -1.551792   0.293793 -1.095988   \n",
              "3  -1.730838    0.144767 -1.440356     0.500391   0.007575 -1.095988   \n",
              "4  -1.730492    0.652659  0.371354     2.073384   0.389199 -1.095988   \n",
              "\n",
              "        Age    Tenure   Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n",
              "0  0.293517 -1.041760 -1.225848      -0.911583   0.646092        0.970243   \n",
              "1  0.198164 -1.387538  0.117350      -0.911583  -1.547768        0.970243   \n",
              "2  0.293517  1.032908  1.333053       2.527057   0.646092       -1.030670   \n",
              "3  0.007457 -1.387538 -1.225848       0.807737  -1.547768       -1.030670   \n",
              "4  0.388871 -1.041760  0.785728      -0.911583   0.646092        0.970243   \n",
              "\n",
              "     Exited  \n",
              "0  1.977165  \n",
              "1 -0.505775  \n",
              "2  1.977165  \n",
              "3 -0.505775  \n",
              "4 -0.505775  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-99a87bc8-b87d-4742-a88b-2ad444a9e80a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>RowNumber</th>\n",
              "      <th>CustomerId</th>\n",
              "      <th>Surname</th>\n",
              "      <th>CreditScore</th>\n",
              "      <th>Geography</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Tenure</th>\n",
              "      <th>Balance</th>\n",
              "      <th>NumOfProducts</th>\n",
              "      <th>HasCrCard</th>\n",
              "      <th>IsActiveMember</th>\n",
              "      <th>Exited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-1.731878</td>\n",
              "      <td>-0.783213</td>\n",
              "      <td>-0.464183</td>\n",
              "      <td>-0.332983</td>\n",
              "      <td>0.293793</td>\n",
              "      <td>-1.095988</td>\n",
              "      <td>0.293517</td>\n",
              "      <td>-1.041760</td>\n",
              "      <td>-1.225848</td>\n",
              "      <td>-0.911583</td>\n",
              "      <td>0.646092</td>\n",
              "      <td>0.970243</td>\n",
              "      <td>1.977165</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-1.731531</td>\n",
              "      <td>-0.606534</td>\n",
              "      <td>-0.390911</td>\n",
              "      <td>-0.447572</td>\n",
              "      <td>0.198387</td>\n",
              "      <td>-1.095988</td>\n",
              "      <td>0.198164</td>\n",
              "      <td>-1.387538</td>\n",
              "      <td>0.117350</td>\n",
              "      <td>-0.911583</td>\n",
              "      <td>-1.547768</td>\n",
              "      <td>0.970243</td>\n",
              "      <td>-0.505775</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-1.731185</td>\n",
              "      <td>-0.995885</td>\n",
              "      <td>0.628988</td>\n",
              "      <td>-1.551792</td>\n",
              "      <td>0.293793</td>\n",
              "      <td>-1.095988</td>\n",
              "      <td>0.293517</td>\n",
              "      <td>1.032908</td>\n",
              "      <td>1.333053</td>\n",
              "      <td>2.527057</td>\n",
              "      <td>0.646092</td>\n",
              "      <td>-1.030670</td>\n",
              "      <td>1.977165</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-1.730838</td>\n",
              "      <td>0.144767</td>\n",
              "      <td>-1.440356</td>\n",
              "      <td>0.500391</td>\n",
              "      <td>0.007575</td>\n",
              "      <td>-1.095988</td>\n",
              "      <td>0.007457</td>\n",
              "      <td>-1.387538</td>\n",
              "      <td>-1.225848</td>\n",
              "      <td>0.807737</td>\n",
              "      <td>-1.547768</td>\n",
              "      <td>-1.030670</td>\n",
              "      <td>-0.505775</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-1.730492</td>\n",
              "      <td>0.652659</td>\n",
              "      <td>0.371354</td>\n",
              "      <td>2.073384</td>\n",
              "      <td>0.389199</td>\n",
              "      <td>-1.095988</td>\n",
              "      <td>0.388871</td>\n",
              "      <td>-1.041760</td>\n",
              "      <td>0.785728</td>\n",
              "      <td>-0.911583</td>\n",
              "      <td>0.646092</td>\n",
              "      <td>0.970243</td>\n",
              "      <td>-0.505775</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-99a87bc8-b87d-4742-a88b-2ad444a9e80a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-99a87bc8-b87d-4742-a88b-2ad444a9e80a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-99a87bc8-b87d-4742-a88b-2ad444a9e80a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    }
: [
        "10.SPLIT THE DATA FOR TRAINING AND TESTING\n"
      ],
      "metadata": {
        "id": "NHlmJswhEGFI"
      }
: [
        "from sklearn.model_selection import train_test_split"
      ],
      "metadata": {
        "id": "b96NcKO7ELTu"
      }
: 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train,X_test,y_train,y_test = train_test_split(x_scaled,y,test_size=0.3,random_state=0)\n"
      ],
      "metadata": {
        "id": "wAS8gaeUEToC"
      },
      "execution_count": 36,
      "outputs": []
    }
]
}

 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
p.msonormal0, li.msonormal0, div.msonormal0
	{mso-style-name:msonormal;
	mso-style-unhide:no;
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;
	font-size:10.0pt;
	mso-ansi-font-size:10.0pt;
	mso-bidi-font-size:10.0pt;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.WordSection1
	{page:WordSection1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman",serif;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1026"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in;word-wrap:break-word'>

<div class=WordSection1>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>{
&quot;nbformat&quot;: 4, &quot;nbformat_minor&quot;: 0, &quot;metadata&quot;: {
&quot;colab&quot;: { &quot;provenance&quot;: [],
&quot;collapsed_sections&quot;: [] }, &quot;kernelspec&quot;: {
&quot;name&quot;: &quot;python3&quot;, &quot;display_name&quot;: &quot;Python
3&quot; }, &quot;language_info&quot;: { &quot;name&quot;: &quot;python&quot; }
}, &quot;cells&quot;: [ { &quot;cell_type&quot;: &quot;code&quot;,
&quot;execution_count&quot;: 1, &quot;metadata&quot;: { &quot;id&quot;:
&quot;Ga0k7CnevZj2&quot; }, &quot;outputs&quot;: [], &quot;source&quot;: [
&quot;import numpy as np\n&quot;, &quot;import pandas as pd\n&quot;,
&quot;import matplotlib.pyplot as plt\n&quot;, &quot;import seaborn as
sns\n&quot;, &quot;from matplotlib import rcParams&quot; ] }, {
&quot;cell_type&quot;: &quot;markdown&quot;, &quot;source&quot;: [ &quot;2.LOAD
THE DATASET&quot; ], &quot;metadata&quot;: { &quot;id&quot;:
&quot;zEfUpTwAvwMq&quot; } }, { &quot;cell_type&quot;: &quot;code&quot;,
&quot;source&quot;: [ &quot;df=pd.read_csv('/content/Churn_Modelling
(1).csv')\n&quot;, &quot;df.head()&quot; ], &quot;metadata&quot;: {
&quot;colab&quot;: { &quot;base_uri&quot;: &quot;https://localhost:8080/&quot;,
&quot;height&quot;: 270 }, &quot;id&quot;: &quot;JGceOrSJwClH&quot;,
&quot;outputId&quot;: &quot;bfc79a40-6b16-4748-cad3-29bacd2748d5&quot; },
&quot;execution_count&quot;: 5, &quot;outputs&quot;: [ {
&quot;output_type&quot;: &quot;execute_result&quot;, &quot;data&quot;: {
&quot;text/plain&quot;: [ &quot; RowNumber CustomerId Surname CreditScore Geography
Gender Age \\\n&quot;, &quot;0 1 15634602 Hargrave 619 France Female 42
\n&quot;, &quot;1 2 15647311 Hill 608 Spain Female 41 \n&quot;, &quot;2 3
15619304 Onio 502 France Female 42 \n&quot;, &quot;3 4 15701354 Boni 699 France
Female 39 \n&quot;, &quot;4 5 15737888 Mitchell 850 Spain Female 43 \n&quot;, &quot;\n&quot;,
&quot; Tenure Balance NumOfProducts HasCrCard IsActiveMember \\\n&quot;,
&quot;0 2 0.00 1 1 1 \n&quot;, &quot;1 1 83807.86 1 0 1 \n&quot;, &quot;2 8
159660.80 3 1 0 \n&quot;, &quot;3 1 0.00 2 0 0 \n&quot;, &quot;4 2 125510.82 1
1 1 \n&quot;, &quot;\n&quot;, &quot; EstimatedSalary Exited \n&quot;, &quot;0
101348.88 1 \n&quot;, &quot;1 112542.58 0 \n&quot;, &quot;2 113931.57 1
\n&quot;, &quot;3 93826.63 0 \n&quot;, &quot;4 79084.10 0 &quot; ],
&quot;text/html&quot;: [ &quot;\n&quot;, &quot; <o:p></o:p></span></p>

<div id="\&quot;df-a1730ae9-371b-4743-ab27-db1a3ac59e2f\">

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>\n&quot;,
&quot; <o:p></o:p></span></p>

<div>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>\n&quot;,
&quot; <o:p></o:p></span></p>

<div>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>\n&quot;,
&quot;<o:p></o:p></span></p>

</div>

</div>

</div>

</div>

</body>

</html>
